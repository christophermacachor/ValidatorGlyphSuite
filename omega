#!/usr/bin/env python3
import numpy as np
import matplotlib.pyplot as plt

"""
Educational quantum simulator demo.
This script constructs a 1D Gaussian wavefunction, computes the probability
density, and demonstrates a measurement (projection) sampled from the
probability distribution. The demonstration is pedagogical and does not
claim any metaphysical interpretation.
"""

def measurement_sample(prob_density, rng):
    prob = prob_density / np.sum(prob_density)
    idx = rng.choice(len(prob), p=prob)
    collapsed = np.zeros_like(prob_density)
    collapsed[idx] = 1.0
    return collapsed, idx

def simulate_collapse(seed=0, grid_points=1000):
    rng = np.random.default_rng(seed)
    x = np.linspace(-10, 10, grid_points)
    psi = np.exp(-x**2) * np.exp(1j * x)
    prob_density = np.abs(psi)**2
    collapsed, idx = measurement_sample(prob_density, rng)

    plt.figure(figsize=(10,4))
    plt.subplot(121)
    plt.plot(x, prob_density)
    plt.title("Quantum Probability Density")
    plt.subplot(122)
    plt.plot(x, collapsed)
    plt.title(f"After Measurement (index={idx})")
    plt.tight_layout()
    plt.savefig("quantum_collapse.png")
    return x, prob_density, collapsed, idx

if __name__ == "__main__":
    simulate_collapse(seed=42)
